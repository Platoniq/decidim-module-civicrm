name: "[CI] Test"

on:
  push:
    branches:
      - main
  pull_request:

env:
  RUBY_VERSION: 3.0.6
  NODE_VERSION: 16.9.1

jobs:
  test-report:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_PASSWORD: postgres
    env:
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_HOST: localhost

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get npm cache directory path
        id: npm-cache-dir-path
        run: echo "::set-output name=dir::$(npm get cache)-civcrm"

      - uses: actions/cache@v2.0.0
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir-path.outputs.dir }}
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-
      - run: npm ci

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Setup Database
        run: bundle exec rake test_app
    
      - run: RAILS_ENV=test bundle exec rails assets:precompile
        name: Precompile assets
        working-directory: ./spec/decidim_dummy_app/

      - run: bundle exec rspec
        name: RSpec
        env:
          CODECOV: 1


      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3

      - uses: actions/upload-artifact@v2-preview
        if: always()
        with:
          name: screenshots
          path: ./spec/decidim_dummy_app/tmp/screenshots
          if-no-files-found: ignore
